<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sc.act.api.mapper.auto.MerchantAccountRecordMapper">
  <resultMap id="BaseResultMap" type="com.sc.act.api.model.auto.MerchantAccountRecord">
    <id column="merchant_account_record_id" jdbcType="INTEGER" property="merchantAccountRecordId" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="record_type" jdbcType="TINYINT" property="recordType" />
    <result column="income_amount" jdbcType="INTEGER" property="incomeAmount" />
    <result column="payout_amount" jdbcType="INTEGER" property="payoutAmount" />
    <result column="reason_desc" jdbcType="VARCHAR" property="reasonDesc" />
    <result column="activity_winners_id" jdbcType="INTEGER" property="activityWinnersId" />
    <result column="activity_id" jdbcType="INTEGER" property="activityId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    merchant_account_record_id, merchant_id, record_type, income_amount, payout_amount, 
    reason_desc, activity_winners_id, activity_id, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.sc.act.api.model.auto.MerchantAccountRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sc_merchant_account_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sc_merchant_account_record
    where merchant_account_record_id = #{merchantAccountRecordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc_merchant_account_record
    where merchant_account_record_id = #{merchantAccountRecordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sc.act.api.model.auto.MerchantAccountRecordExample">
    delete from sc_merchant_account_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sc.act.api.model.auto.MerchantAccountRecord">
    <selectKey keyProperty="merchantAccountRecordId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sc_merchant_account_record (merchant_id, record_type, income_amount, 
      payout_amount, reason_desc, activity_winners_id, 
      activity_id, create_time, update_time
      )
    values (#{merchantId,jdbcType=INTEGER}, #{recordType,jdbcType=TINYINT}, #{incomeAmount,jdbcType=INTEGER}, 
      #{payoutAmount,jdbcType=INTEGER}, #{reasonDesc,jdbcType=VARCHAR}, #{activityWinnersId,jdbcType=INTEGER}, 
      #{activityId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sc.act.api.model.auto.MerchantAccountRecord">
    <selectKey keyProperty="merchantAccountRecordId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sc_merchant_account_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="recordType != null">
        record_type,
      </if>
      <if test="incomeAmount != null">
        income_amount,
      </if>
      <if test="payoutAmount != null">
        payout_amount,
      </if>
      <if test="reasonDesc != null">
        reason_desc,
      </if>
      <if test="activityWinnersId != null">
        activity_winners_id,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="recordType != null">
        #{recordType,jdbcType=TINYINT},
      </if>
      <if test="incomeAmount != null">
        #{incomeAmount,jdbcType=INTEGER},
      </if>
      <if test="payoutAmount != null">
        #{payoutAmount,jdbcType=INTEGER},
      </if>
      <if test="reasonDesc != null">
        #{reasonDesc,jdbcType=VARCHAR},
      </if>
      <if test="activityWinnersId != null">
        #{activityWinnersId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sc.act.api.model.auto.MerchantAccountRecordExample" resultType="java.lang.Long">
    select count(*) from sc_merchant_account_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sc_merchant_account_record
    <set>
      <if test="record.merchantAccountRecordId != null">
        merchant_account_record_id = #{record.merchantAccountRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
      </if>
      <if test="record.recordType != null">
        record_type = #{record.recordType,jdbcType=TINYINT},
      </if>
      <if test="record.incomeAmount != null">
        income_amount = #{record.incomeAmount,jdbcType=INTEGER},
      </if>
      <if test="record.payoutAmount != null">
        payout_amount = #{record.payoutAmount,jdbcType=INTEGER},
      </if>
      <if test="record.reasonDesc != null">
        reason_desc = #{record.reasonDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.activityWinnersId != null">
        activity_winners_id = #{record.activityWinnersId,jdbcType=INTEGER},
      </if>
      <if test="record.activityId != null">
        activity_id = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sc_merchant_account_record
    set merchant_account_record_id = #{record.merchantAccountRecordId,jdbcType=INTEGER},
      merchant_id = #{record.merchantId,jdbcType=INTEGER},
      record_type = #{record.recordType,jdbcType=TINYINT},
      income_amount = #{record.incomeAmount,jdbcType=INTEGER},
      payout_amount = #{record.payoutAmount,jdbcType=INTEGER},
      reason_desc = #{record.reasonDesc,jdbcType=VARCHAR},
      activity_winners_id = #{record.activityWinnersId,jdbcType=INTEGER},
      activity_id = #{record.activityId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sc.act.api.model.auto.MerchantAccountRecord">
    update sc_merchant_account_record
    <set>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="recordType != null">
        record_type = #{recordType,jdbcType=TINYINT},
      </if>
      <if test="incomeAmount != null">
        income_amount = #{incomeAmount,jdbcType=INTEGER},
      </if>
      <if test="payoutAmount != null">
        payout_amount = #{payoutAmount,jdbcType=INTEGER},
      </if>
      <if test="reasonDesc != null">
        reason_desc = #{reasonDesc,jdbcType=VARCHAR},
      </if>
      <if test="activityWinnersId != null">
        activity_winners_id = #{activityWinnersId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where merchant_account_record_id = #{merchantAccountRecordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sc.act.api.model.auto.MerchantAccountRecord">
    update sc_merchant_account_record
    set merchant_id = #{merchantId,jdbcType=INTEGER},
      record_type = #{recordType,jdbcType=TINYINT},
      income_amount = #{incomeAmount,jdbcType=INTEGER},
      payout_amount = #{payoutAmount,jdbcType=INTEGER},
      reason_desc = #{reasonDesc,jdbcType=VARCHAR},
      activity_winners_id = #{activityWinnersId,jdbcType=INTEGER},
      activity_id = #{activityId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where merchant_account_record_id = #{merchantAccountRecordId,jdbcType=INTEGER}
  </update>
</mapper>