<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sc.act.api.mapper.auto.TicketMapper">
  <resultMap id="BaseResultMap" type="com.sc.act.api.model.auto.Ticket">
    <id column="ticket_id" jdbcType="INTEGER" property="ticketId" />
    <result column="ticket_code" jdbcType="VARCHAR" property="ticketCode" />
    <result column="ticket_pwd" jdbcType="VARCHAR" property="ticketPwd" />
    <result column="nominal_value" jdbcType="INTEGER" property="nominalValue" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="remark1" jdbcType="VARCHAR" property="remark1" />
    <result column="remark2" jdbcType="VARCHAR" property="remark2" />
    <result column="remark3" jdbcType="VARCHAR" property="remark3" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ticket_id, ticket_code, ticket_pwd, nominal_value, `state`, remark1, remark2, remark3, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.sc.act.api.model.auto.TicketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sc_ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sc_ticket
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc_ticket
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sc.act.api.model.auto.TicketExample">
    delete from sc_ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sc.act.api.model.auto.Ticket">
    <selectKey keyProperty="ticketId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sc_ticket (ticket_code, ticket_pwd, nominal_value, 
      `state`, remark1, remark2, 
      remark3, create_time, update_time
      )
    values (#{ticketCode,jdbcType=VARCHAR}, #{ticketPwd,jdbcType=VARCHAR}, #{nominalValue,jdbcType=INTEGER}, 
      #{state,jdbcType=TINYINT}, #{remark1,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR}, 
      #{remark3,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sc.act.api.model.auto.Ticket">
    <selectKey keyProperty="ticketId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sc_ticket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ticketCode != null">
        ticket_code,
      </if>
      <if test="ticketPwd != null">
        ticket_pwd,
      </if>
      <if test="nominalValue != null">
        nominal_value,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="remark1 != null">
        remark1,
      </if>
      <if test="remark2 != null">
        remark2,
      </if>
      <if test="remark3 != null">
        remark3,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ticketCode != null">
        #{ticketCode,jdbcType=VARCHAR},
      </if>
      <if test="ticketPwd != null">
        #{ticketPwd,jdbcType=VARCHAR},
      </if>
      <if test="nominalValue != null">
        #{nominalValue,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="remark1 != null">
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null">
        #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sc.act.api.model.auto.TicketExample" resultType="java.lang.Long">
    select count(*) from sc_ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sc_ticket
    <set>
      <if test="record.ticketId != null">
        ticket_id = #{record.ticketId,jdbcType=INTEGER},
      </if>
      <if test="record.ticketCode != null">
        ticket_code = #{record.ticketCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketPwd != null">
        ticket_pwd = #{record.ticketPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.nominalValue != null">
        nominal_value = #{record.nominalValue,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.remark1 != null">
        remark1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null">
        remark2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
      <if test="record.remark3 != null">
        remark3 = #{record.remark3,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sc_ticket
    set ticket_id = #{record.ticketId,jdbcType=INTEGER},
      ticket_code = #{record.ticketCode,jdbcType=VARCHAR},
      ticket_pwd = #{record.ticketPwd,jdbcType=VARCHAR},
      nominal_value = #{record.nominalValue,jdbcType=INTEGER},
      `state` = #{record.state,jdbcType=TINYINT},
      remark1 = #{record.remark1,jdbcType=VARCHAR},
      remark2 = #{record.remark2,jdbcType=VARCHAR},
      remark3 = #{record.remark3,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sc.act.api.model.auto.Ticket">
    update sc_ticket
    <set>
      <if test="ticketCode != null">
        ticket_code = #{ticketCode,jdbcType=VARCHAR},
      </if>
      <if test="ticketPwd != null">
        ticket_pwd = #{ticketPwd,jdbcType=VARCHAR},
      </if>
      <if test="nominalValue != null">
        nominal_value = #{nominalValue,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="remark1 != null">
        remark1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        remark2 = #{remark2,jdbcType=VARCHAR},
      </if>
      <if test="remark3 != null">
        remark3 = #{remark3,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sc.act.api.model.auto.Ticket">
    update sc_ticket
    set ticket_code = #{ticketCode,jdbcType=VARCHAR},
      ticket_pwd = #{ticketPwd,jdbcType=VARCHAR},
      nominal_value = #{nominalValue,jdbcType=INTEGER},
      `state` = #{state,jdbcType=TINYINT},
      remark1 = #{remark1,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR},
      remark3 = #{remark3,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where ticket_id = #{ticketId,jdbcType=INTEGER}
  </update>
</mapper>